name: ie-bank-frontend

on:
  push:
    branches: [ "keyvault-PROD" ]
  pull_request:
    branches: [ "keyvault-PROD" ]
  workflow_dispatch:

env:
  FRONTEND_WEBAPP_DEV: apayne-fe-dev
  FRONTEND_WEBAPP_UAT: apayne-fe-uat
  FRONTEND_WEBAPP_PROD: apayne-fe-prod

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      # Clean npm cache to ensure fresh install
      - name: Clean npm cache
        run: npm cache clean --force

      - name: npm install, build, and test (Development)
        run: |
          npm install
          npm run build:dev ## This command will build the Vue.js app using .env.development variables

      - name: Upload artifact for deployment job (Development)
        uses: actions/upload-artifact@v4
        with:
          name: node-app-dev
          path: dist-dev/

  deploy-dev:
    if: success()  # Only run this after the build job is successful
    runs-on: ubuntu-latest
    needs: build  # Ensures the build job runs first
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app-dev

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      # Fetching the deployment token from Key Vault for DEV
      - name: Get Development Token from Key Vault
        id: get-dev-token
        run: |
          DEV_TOKEN=$(az keyvault secret show --vault-name apayne-kv-dev --name StaticWebAppDeploymentToken --query value -o tsv)
          echo "DEV_TOKEN=${DEV_TOKEN}" >> $GITHUB_ENV

      # Deploy to Azure Static Web App (Development)
      - name: Deploy to Azure Static Web App (Development)
        uses: Azure/static-web-apps-deploy@1a947af9992250f3bc2e68ad0754c0b0c11566c9
        with:
          azure_static_web_apps_api_token: ${{ env.DEV_TOKEN }}
          action: "upload"
          app_location: .
          output_location: .

  deploy-uat:
    if: success()  # Only run this after deploy-dev is successful
    runs-on: ubuntu-latest
    needs: deploy-dev  # Ensures deploy-dev runs first
    environment:
      name: 'UAT'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app-dev

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Fetching the UAT token from Key Vault
      - name: Get UAT Token from Key Vault
        id: get-uat-token
        run: |
          UAT_TOKEN=$(az keyvault secret show --vault-name apayne-kv-uat --name StaticWebAppDeploymentToken --query value -o tsv)
          echo "UAT_TOKEN=${UAT_TOKEN}" >> $GITHUB_ENV

      # Deploy to Azure Static Web App (UAT)
      - name: Deploy to Azure Static Web App (UAT)
        uses: Azure/static-web-apps-deploy@1a947af9992250f3bc2e68ad0754c0b0c11566c9
        with:
          azure_static_web_apps_api_token: ${{ env.UAT_TOKEN }}
          action: "upload"
          app_location: .
          output_location: .

  deploy-prod:
    if: success()  # Only run this after deploy-uat is successful
    runs-on: ubuntu-latest
    needs: deploy-uat  # Ensures deploy-uat runs first
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app-dev

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Fetching the PROD token from Key Vault
      - name: Get PROD Token from Key Vault
        id: get-prod-token
        run: |
          PROD_TOKEN=$(az keyvault secret show --vault-name apayne-kv-prod --name StaticWebAppDeploymentToken --query value -o tsv)
          echo "PROD_TOKEN=${PROD_TOKEN}" >> $GITHUB_ENV

      # Deploy to Azure Static Web App (Production)
      - name: Deploy to Azure Static Web App (Production)
        uses: Azure/static-web-apps-deploy@1a947af9992250f3bc2e68ad0754c0b0c11566c9
        with:
          azure_static_web_apps_api_token: ${{ env.PROD_TOKEN }}
          action: "upload"
          app_location: .
          output_location: .


