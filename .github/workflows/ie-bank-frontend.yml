name: ie-bank-frontend

on:
  push:
    branches: [ "keyvault-PROD" ]
  pull_request:
    branches: [ "keyvault-PROD" ]
  workflow_dispatch:

env:
  FRONTEND_WEBAPP_DEV: apayne-fe-dev
  FRONTEND_WEBAPP_UAT: apayne-fe-uat
  FRONTEND_WEBAPP_PROD: apayne-fe-prod

jobs:
  # Build job for all environments
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      # Clear npm cache to ensure fresh install
      - name: Clean npm cache
        run: npm cache clean --force

      - name: npm install, build, and test for Development
        run: |
          npm install
          npm run build -- --mode development --dest dist-dev ## This command will build the Vue.js app using .env.development variables

      - name: npm install, build, and test for UAT
        run: |
          npm install
          npm run build -- --mode uat --dest dist-uat ## This command will build the Vue.js app using .env.uat variables

      - name: npm install, build, and test for Production
        run: |
          npm install
          npm run build -- --mode production --dest dist-prod ## This command will build the Vue.js app using .env.production variables

      - name: Upload Development artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app-dev
          path: dist-dev/

      - name: Upload UAT artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app-uat
          path: dist-uat/

      - name: Upload Production artifact
        uses: actions/upload-artifact@v4
        with:
          name: node-app-prod
          path: dist-prod/

  # Deploy to Development environment
  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download Development artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app-dev

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Fetching the deployment token from Key Vault
      - name: Get Development Token from Key Vault
        id: get-dev-token
        run: |
          DEV_TOKEN=$(az keyvault secret show --vault-name apayne-kv-dev --name StaticWebAppDeploymentToken --query value -o tsv)
          echo "DEV_TOKEN=${DEV_TOKEN}" >> $GITHUB_ENV

      - name: Deploy to Azure Static Web App (Development)
        uses: Azure/static-web-apps-deploy@1a947af9992250f3bc2e68ad0754c0b0c11566c9
        with:
          azure_static_web_apps_api_token: ${{ env.DEV_TOKEN }}
          action: "upload"
          app_location: .
          output_location: .

  # Deploy to UAT environment after Dev
  deploy-uat:
    runs-on: ubuntu-latest
    needs: deploy-dev
    if: github.event.pull_request.base.ref == 'main' || github.event_name == 'workflow_dispatch'
    environment:
      name: 'UAT'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download UAT artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app-uat

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get UAT Token from Key Vault
        id: get-uat-token
        run: |
          UAT_TOKEN=$(az keyvault secret show --vault-name apayne-kv-uat --name StaticWebAppDeploymentToken --query value -o tsv)
          echo "UAT_TOKEN=${UAT_TOKEN}" >> $GITHUB_ENV

      - name: Deploy to Azure Static Web App (UAT)
        uses: Azure/static-web-apps-deploy@1a947af9992250f3bc2e68ad0754c0b0c11566c9
        with:
          azure_static_web_apps_api_token: ${{ env.UAT_TOKEN }}
          action: "upload"
          app_location: .
          output_location: .

  # Deploy to Production environment after UAT
  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-uat
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download Production artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app-prod

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get Production Token from Key Vault
        id: get-prod-token
        run: |
          PROD_TOKEN=$(az keyvault secret show --vault-name apayne-kv-prod --name StaticWebAppDeploymentToken --query value -o tsv)
          echo "PROD_TOKEN=${PROD_TOKEN}" >> $GITHUB_ENV

      - name: Deploy to Azure Static Web App (Production)
        uses: Azure/static-web-apps-deploy@1a947af9992250f3bc2e68ad0754c0b0c11566c9
        with:
          azure_static_web_apps_api_token: ${{ env.PROD_TOKEN }}
          action: "upload"
          app_location: .
          output_location: .
